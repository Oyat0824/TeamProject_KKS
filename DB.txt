##### DB 삭제/생성/선택
DROP DATABASE IF EXISTS KKS_PROJECT;
CREATE DATABASE KKS_PROJECT;
USE KKS_PROJECT;

##### genFile 테이블 생성
CREATE TABLE genFile (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME DEFAULT NULL,
    updateDate DATETIME DEFAULT NULL,
    `relTypeCode` VARCHAR(20) NOT NULL,
    `relId` INT UNSIGNED NOT NULL,
    originFileName VARCHAR(100) NOT NULL,
    fileExt VARCHAR(10) NOT NULL,
    typeCode VARCHAR(20) NOT NULL,
    type2Code VARCHAR(20) NOT NULL,
    fileNo SMALLINT UNSIGNED NOT NULL,
    fileDir VARCHAR(20) NOT NULL,
    fileSize INT UNSIGNED NOT NULL,
    fileExtTypeCode VARCHAR(10) NOT NULL,
    fileExtType2Code VARCHAR(10) NOT NULL,
    delDate DATETIME DEFAULT NULL COMMENT '삭제 날짜',
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '삭제상태 (0 = 미삭제, 1 = 삭제)',
    KEY relId (relTypeCode, relId, typeCode, type2Code, fileNo)
);

##### member 테이블 생성
CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	loginId VARCHAR(20) NOT NULL,
	loginPw VARCHAR(200) NOT NULL,
	`name` VARCHAR(20) NOT NULL,
	gender VARCHAR(10) NOT NULL COMMENT '성별 (male = 남자, female = 여자)',
	birthday DATE NOT NULL,
	email VARCHAR(50) NOT NULL,
	cellphoneNum VARCHAR(20) NOT NULL,
	salt VARCHAR(100) NOT NULL,
	memberType TINYINT NOT NULL DEFAULT 3 COMMENT '회원 타입 (3 = 일반, 6 = 판매자, 9 = 관리자)',
	storeState TINYINT NOT NULL DEFAULT 0 COMMENT '가게 유무 (0 = 무, 1 = 유)',
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴여부 (0 = 탈퇴 전, 1 = 탈퇴 후)',
	delDate DATETIME COMMENT '탈퇴 날짜',
	UNIQUE `uniqueKey` (loginId)
);

##### attr 테이블 생성 (인증코드 테이블)
CREATE TABLE attr (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL,
    relId INT UNSIGNED NOT NULL,
    typeCode VARCHAR(30) NOT NULL,
    type2Code VARCHAR(70) NOT NULL,
    `value` TEXT NOT NULL,
    expireDate DATETIME NULL,
    UNIQUE `uniqueKey` (relTypeCode, relId, typeCode, type2Code),
    KEY `indexKey` (relTypeCode, relId, typeCode, type2Code)
);

##### store 테이블 생성
CREATE TABLE store(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	storeName VARCHAR(40) NOT NULL,
	storeDesc VARCHAR(100),
	memberId INT UNSIGNED NOT NULL,
	UNIQUE `uniqueKey` (storeName, memberId),
	KEY `indexKey` (memberId)
);

##### product 테이블 생성
CREATE TABLE product(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	productName VARCHAR(40) NOT NULL,
	productPrice VARCHAR(40) NOT NULL,
	productCetegory VARCHAR(20),  
	productStock VARCHAR(20) NOT NULL, # 상품재고
	productBody VARCHAR(100) NOT NULL,
	stroeId INT UNSIGNED NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	KEY `indexKey` (stroeId, memberId)
);

##### category 테이블 생성
CREATE TABLE category(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR(40) NOT NULL,
	orderNo TINYINT UNSIGNED NOT NULL UNIQUE,
	storeId INT UNSIGNED NOT NULL
);

##### 테이블 조회
SELECT * FROM attr;
SELECT * FROM genFile;

SELECT * FROM `member`;
SELECT * FROM store;
SELECT * FROM product;
SELECT * FROM category;

### member 테스트 데이터 생성
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test1',
loginPw = 'test1',
`name` = '유저',
gender = 'female',
birthday = NOW(),
email = 'test@naver.com',
cellphoneNum = '010-1234-5678',
salt = 'test1';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test2',
loginPw = 'test2',
`name` = '판매자',
gender = 'male',
birthday = NOW(),
email = 'test@naver.com',
cellphoneNum = '010-1234-5678',
memberType = 6,
salt = 'test2';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'admin',
loginPw = 'admin',
`name` = '관리자',
gender = 'male',
birthday = NOW(),
email = 'test@naver.com',
cellphoneNum = '010-1234-5678',
memberType = 9,
salt = 'admin';

UPDATE `member`
SET loginPw = SHA2(CONCAT(loginPw, salt), 256);